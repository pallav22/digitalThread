// Dependencies
// --------------------------------------------------

@import "ge-bootstrap/less/hdx-bootstrap-lights-off.less";
@import "modules/less/hdx-modules-lights-off.less";
@import "datatables.less";
@import "hdx-variables-lights-off.less";
@import "hdx-datagrids.less";
@import "hdx-row-grouping-lights-off.less";




// Data grid tables
//------------------------
table.dataTable {
    thead {
        th.sorting_asc, th.sorting_desc {
            background-color: @grayDarker;
            color: @grayLighter;
        }
    }
    tr.even, tr.odd {
        background: none;
        td {
            background: none;
        }
    }
}


table.dataTable {
  thead th {
    // TODO figure out if there's a way to use icon fonts for the sort indicator
    &.sorting_desc {
      background-image: url("@{componentsPath}/datagrids/img/sort_desc_light.png");
    }
    &.sorting_asc {
      background-image: url("@{componentsPath}/datagrids/img/sort_asc_light.png");
    }
  }

  tr:hover {
    background: @tableBackgroundHover;
  }
  // TODO refactor - define semantic names for all colors and move this up to the shared component
  tr.row_selected.odd td,
  tr.row_selected.even td {
    color: @white;
    background-color: @datatableBackgroundAccent;
    &.outlier {
      background-color: mix(@tableBackgroundAccent, @btnDangerBackground, 30%);
      color: @white;
    }
    a {
      color: @blueDark;
    }
  }
}

table.table.data-grid.table-bordered
{
    > thead > tr > th
    {
        #gradient > .vertical(lighten(@tableHeaderBkgndGray, 10%), lighten(@tableHeaderBkgndGray, 6%));
        border: none;
        background-color:lighten(@tableHeaderBkgndGray, 6%);
    }

    > thead > tr > th.alt,
    > thead > tr > th.alt:first-child
    {
        background: darken(@grayDark, 15%);
        border: none;
    }

    > tbody > tr > td,
    &.table-arrow-selection.table-arrow-selection-first-column > tbody > tr > td
    {
        border-color: @grayDarker;
    }

    tbody > tr:first-child > td
    {
        border-top: none;
    }

    tbody > tr > td
    {
        background-color: @offBlack
    }

    > tbody > tr > td > table tr td,
    > tbody > tr > td > table tr th,
    > tbody > tr:hover > td > table tr td,
    > tbody > tr:hover > td > table tr th
    {
        background: none;
    }
}

.data-container
{
    background-color:		@black;
    color:					@gray;
    border-color:			@grayDarker;

    &.labs
    {
        border-color: @grayDarker;    
        border: 1px solid @grayDarker;

        > ul.result > li.empty
        {
            border-color: darken(@grayDarker, 11%);
        }

        .labs-status
        {
            background-color: @white;
            overflow: visible;

            &.icon-time
            {
                width: 9px;
                height: 9px;
                line-height: 7px;
                text-indent: -1px;
                .border-radius(5px);
                top: 0;
            }

            &.icon-warning-sign
            {
                height: 10px;
                line-height: 10px;
                width: 2px;
                text-indent: -3px;
                right: -3px;
                bottom: 3px;
            }
        }
    }

    &.fishbone
    {
       // border: none;
        background-color: lighten(@black, 11.5);

        .values
        {
        	 > * {
                
                color: @grayDark;
                }
            .tail-left,
            .tail-right
            {
                background-color: lighten(@black, 11.5);
            }

            .tail-left
            {
                &:after
                {
                    border-left-color: lighten(@black, 11.5);
                }

                &:before
                {
                    border-left-color: darken(@grayDark, 11%);
                }
            }

            .tail-right
            {
                &:after
                {
                    border-right-color: lighten(@black, 11.5);
                }

                &:before
                {
                    border-right-color: darken(@grayDark, 11%);
                }
            }

            .segments .segment .value
            {
                border-color: darken(@grayDark, 11%);
            }
        }
		.status {
			background-color: @white;
            overflow: visible;			
			
			display: inline;
			
			&.icon-warning-sign{
				height: 10px;
				line-height: 10px;
				width: 2px;
				text-indent: -4px;              
				position: absolute;
				top: -3px;
				right: -2px;
			}
		}
    }
/*
    &.sparkline
    {
//        border: none;
        background-color:	 lighten(@black, 11.5);  
        border-color:		 @grayDarker;
        .sparkline-value
        {
            color: lighten(@grayLightest, 6%);
        }
	
		.status {
			background-color: @white;
            overflow: visible;			
			
			display: inline;
			
			&.icon-warning-sign{
				height: 10px;
				line-height: 10px;
				width: 2px;
				text-indent: -4px;              
				position: absolute;
				top: -3px;
				right: -2px;
			}
		}
        
    }
*/
    .status
    {
        display: none;
    }

    table.table tr,
    table.table th,
    table.table td {
     //   border-color: darken(@offBlack, 11%);
        background-color: @offBlack;
        color: @grayLightest;
    }
}

// jquery.dataTables.css overrides
table.dataTable.no-footer {
  border-bottom: 1px solid @grayDarker;
}

.dataTables_wrapper .dataTables_length,
.dataTables_wrapper .dataTables_filter,
.dataTables_wrapper .dataTables_info,
.dataTables_wrapper .dataTables_processing,
.dataTables_wrapper .dataTables_paginate {
  color: @gray;
}